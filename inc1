#!/usr/bin/bash

# Leggi il file JSON in una variabile
json=$(cat "/tmp/config.json")

# Crea le variabili leggendo dal JSON
partition_device=$(echo "$json" | jq -r '.partition.device')
partition_efi=$(echo "$json" | jq -r '.partition.efi')
root=$(echo "$json" | jq -r '.partition.root')
country=$(echo "$json" | jq -r '.locale.reflector')
kernel=$(echo "$json" | jq -r '.users[0].kernel')
pacstrap="base base-devel $kernel linux-firmware intel-ucode btrfs-progs jq"



check_internet() {
   
  ping -c 1 8.8.8.8 > /dev/null 2>&1
    if [ $? -ne 0 ]; then
        echo -e "\033[0;31mNo internet connection! Aborting..\033[0m"
        exit
    else
        echo ""
    fi
}


check_partitions(){

if mount | grep "/dev/$partition_device" > /dev/null; then
    echo -e "\033[0;31mThe disk has mounted partitions! Aborting..\033[0m"
    exit
else
    echo ""
fi

}


uefi(){
   
        sgdisk --zap-all "/dev/$partition_device"
        parted -s "/dev/$partition_device" mklabel gpt
        parted -s "/dev/$partition_device" mkpart primary fat32 1MiB 1GiB
        parted -s "/dev/$partition_device" set 1 esp on
        parted -s "/dev/$partition_device" mkpart primary btrfs 1GiB "${root}M"
        parted -s "/dev/$partition_device" mkpart primary btrfs "${root}M" 100%
        
        if [ $partition_device = "nvme0n1" ]; then

             mkfs.fat -F32 "/dev/$partition_device"p1
             mkfs.btrfs -f "/dev/$partition_device"p2
             mkfs.btrfs -f "/dev/$partition_device"p3
             
             mount "/dev/$partition_device"p2 /mnt           
             btrfs su cr /mnt/@  
             umount /mnt 
             mount "/dev/$partition_device"p3 /mnt
             btrfs su cr /mnt/@home  
             umount /mnt
             
             mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@ "/dev/$partition_device"p2 /mnt
             mkdir /mnt/home
             mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@home "/dev/$partition_device"p3 /mnt/home
             mkdir /mnt/boot
             mount "/dev/$partition_device"p1 /mnt/boot

        elif [ $partition_device = "nvme0n2" ]; then

             mkfs.fat -F32 "/dev/$partition_device"p1
             mkfs.btrfs -f "/dev/$partition_device"p2
             mkfs.btrfs -f "/dev/$partition_device"p3
             
             mount "/dev/$partition_device"p2 /mnt           
             btrfs su cr /mnt/@  
             umount /mnt 
             mount "/dev/$partition_device"p3 /mnt
             btrfs su cr /mnt/@home  
             umount /mnt
             
             mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@ "/dev/$partition_device"p2 /mnt
             mkdir /mnt/home
             mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@home "/dev/$partition_device"p3 /mnt/home
             mkdir /mnt/boot
             mount "/dev/$partition_device"p1 /mnt/boot

        elif [ $partition_device = "nvme0n3" ]; then

             mkfs.fat -F32 "/dev/$partition_device"p1
             mkfs.btrfs -f "/dev/$partition_device"p2
             mkfs.btrfs -f "/dev/$partition_device"p3
             
             mount "/dev/$partition_device"p2 /mnt           
             btrfs su cr /mnt/@  
             umount /mnt 
             mount "/dev/$partition_device"p3 /mnt
             btrfs su cr /mnt/@home  
             umount /mnt
             
             mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@ "/dev/$partition_device"p2 /mnt
             mkdir /mnt/home
             mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@home "/dev/$partition_device"p3 /mnt/home
             mkdir /mnt/boot
             mount "/dev/$partition_device"p1 /mnt/boot

        elif [ $partition_device = "nvme0n4" ]; then

             mkfs.fat -F32 "/dev/$partition_device"p1
             mkfs.btrfs -f "/dev/$partition_device"p2
             mkfs.btrfs -f "/dev/$partition_device"p3
             
             mount "/dev/$partition_device"p2 /mnt           
             btrfs su cr /mnt/@  
             umount /mnt 
             mount "/dev/$partition_device"p3 /mnt
             btrfs su cr /mnt/@home  
             umount /mnt
             
             mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@ "/dev/$partition_device"p2 /mnt
             mkdir /mnt/home
             mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@home "/dev/$partition_device"p3 /mnt/home
             mkdir /mnt/boot
             mount "/dev/$partition_device"p1 /mnt/boot     

        else

             mkfs.fat -F32 "/dev/$partition_device"1
             mkfs.btrfs -f "/dev/$partition_device"2
             mkfs.btrfs -f "/dev/$partition_device"3
             
             mount "/dev/$partition_device"2 /mnt           
             btrfs su cr /mnt/@  
             umount /mnt 
             mount "/dev/$partition_device"3 /mnt
             btrfs su cr /mnt/@home  
             umount /mnt
             
             mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@ "/dev/$partition_device"2 /mnt
             mkdir /mnt/home
             mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@home "/dev/$partition_device"3 /mnt/home
             mkdir /mnt/boot
             mount "/dev/$partition_device"1 /mnt/boot

        fi 
    }    

legacy(){

        # Crea la partizione / (root) Btrfs e la formatta
        parted -s "/dev/$partition_device"  mklabel msdos
        parted -s "/dev/$partition_device"  mkpart primary btrfs 1MiB "${root}M"
        parted -s "/dev/$partition_device"  mkpart primary btrfs "${root}M" 100%
        mkfs.btrfs -f "/dev/$partition_device"1
        mkfs.btrfs -f "/dev/$partition_device"2
        
        # Monta la partizione / (root) e crea il sottovolume "@"
        mount "/dev/$partition_device"1 /mnt
        btrfs subvolume create /mnt/@
        umount /mnt
        
        # Monta la partizione /home e crea il sottovolume "@home"
        mkdir -p /mnt/home
        mount "/dev/$partition_device"2 /mnt/home
        btrfs subvolume create /mnt/home/@home
        umount /mnt/home
        
        # Monta il sottovolume "@"
        mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@ "/dev/$partition_device"1 /mnt
        
        # Monta il sottovolume "@home"
        mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@home "/dev/$partition_device"2 /mnt/home

        
    }    

base(){

        reflector --verbose -c $country -a 6 --sort rate --save /etc/pacman.d/mirrorlist
        pacstrap -K /mnt $pacstrap
        genfstab -U /mnt > /mnt/etc/fstab
        
        # configurazioni varie per installazione
        cp -rp /etc/pacman.conf /mnt/etc/
        cp -rp /tmp/config.json /usr/bin/inc-files/
        cp -rp /usr/bin/inc-files /mnt/home/
        

    }


check_internet
check_partitions
if [ "$partition_efi" = "true" ]; then 
    uefi
else
    legacy
fi
clear
base
arch-chroot /mnt /bin/bash -c "/home/inc-files/inc2"