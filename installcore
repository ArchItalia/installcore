#!/bin/bash
#
# Author Jonathan Sanfilippo - 20 Jul 2023
# Another installation method programmed through a custom script 
# prepared for File System BTRFS with subvolume creation and udev 
# zram rule for swap, but completely customizable according to the needs of your machine.
# architalialinux@gmail.com

# Define color codes
RED='\033[0;31m'
NC='\033[0m' # No Color

echo -e "\e[34mThis is your configuration.\e[0m"
 

read -p  "${RED}Warning:${NC} if you accept to continue, the entire disk will be partitioned and all data will be lost. Continue? [y/n] " choice
case "$choice" in
  y|Y )
    # Inserire qui il codice da eseguire se si sceglie di continuare
    echo "Beginning core installation.."
    ;;
  n|N )
    # Inserire qui il codice da eseguire se si sceglie di abortire
    echo "Operation cancelled.."
    exit
    ;;
  * )
    echo "Invalid choice!"
    exit 1
    ;;
esac


echo -e "\e[34mCreating partitions...\e[0m"

url="./data"
disk=$(cat $url/disk)
efi=$(cat $url/efi)
root=$(cat $url/root)
home=$(cat $url/home)
efi_size_mb=$(cat $url/efi_size)
root_size_gb=$(cat $url/root_size)

p1="/dev/$efi"
p2="/dev/$root"
p3="/dev/$home"

country=$(cat $url/country)
localhost=$(cat $url/localhost)
username=$(cat $url/username)
realname=$(cat $url/realname)
rootpw=$(cat $url/rootpw)
userpw=$(cat $url/userpw)
localegen=$(cat $url/localegen)
localeconf=$(cat $url/localeconf)
keymap=$(cat $url/keymap)
localtime=$(cat $url/localtime)
zram=$(cat $url/zram)

# Convertiamo la dimensione della partizione EFI in un numero di blocchi
efi_size_blocks=$((efi_size_mb * 2048))

# Convertiamo la dimensione della partizione Root in un numero di blocchi
root_size_blocks=$((root_size_gb * 1048576))

# Calcoliamo lo spazio libero rimasto sul disco
fdisk_output=$(fdisk -l /dev/sda | tail -1)
read start free_space_blocks end <<<"$fdisk_output"

# Calcoliamo la dimensione della partizione Home
home_size_blocks=$((free_space_blocks / 2))

# Creiamo le partizioni
echo "o
n
p


+$efi_size_blocks
n
p


+$root_size_blocks
n
p


+$home_size_blocks
n
p


w" | fdisk /dev/$disk


#Formattazione delle partizioni - EFI, ROOT, HOME
mkfs.fat -F32 $p1
mkfs.btrfs -f $p2 
mkfs.btrfs -f $p3

#Montaggio e sottovolumi - partizione /home separata
mount $p2 /mnt           
btrfs su cr /mnt/@  
umount /mnt 
mount $p3 /mnt
btrfs su cr /mnt/@home      
umount /mnt                             
mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@ $p2 /mnt 
mkdir -p /mnt/{boot,home}
mount $p1 /mnt/boot 
mount -o noatime,ssd,space_cache=v2,compress=zstd,discard=async,subvol=@home $p3 /mnt/home 

# reflector
reflector --verbose -c $country -a 6 --sort rate --save /etc/pacman.d/mirrorlist

#pacstrap
pacstrap -K /mnt base base-devel linux linux-firmware intel-ucode btrfs-progs



#fstab
genfstab -Up /mnt > /mnt/etc/fstab


cp 2-parte.sh /mnt/home/
arch-chroot /mnt /bin/bash -c "/home/2-parte.sh"
